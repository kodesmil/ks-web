/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
var protoc$gen$validate_validate_validate_pb = require('../../../protoc-gen-validate/validate/validate_pb.js');
var github_com_infobloxopen_protoc$gen$gorm_options_gorm_pb = require('../../../github.com/infobloxopen/protoc-gen-gorm/options/gorm_pb.js');
var github_com_infobloxopen_protoc$gen$gorm_types_types_pb = require('../../../github.com/infobloxopen/protoc-gen-gorm/types/types_pb.js');
var github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb = require('../../../github.com/infobloxopen/atlas-app-toolkit/query/collection_operators_pb.js');
var github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb = require('../../../github.com/infobloxopen/atlas-app-toolkit/rpc/resource/resource_pb.js');
goog.exportSymbol('proto.model.CreateNotificationDeviceRequest', null, global);
goog.exportSymbol('proto.model.CreateNotificationDeviceResponse', null, global);
goog.exportSymbol('proto.model.CreateNotificationSettingRequest', null, global);
goog.exportSymbol('proto.model.CreateNotificationSettingResponse', null, global);
goog.exportSymbol('proto.model.DeleteNotificationSettingRequest', null, global);
goog.exportSymbol('proto.model.DeleteNotificationSettingResponse', null, global);
goog.exportSymbol('proto.model.ListNotificationSettingRequest', null, global);
goog.exportSymbol('proto.model.ListNotificationSettingResponse', null, global);
goog.exportSymbol('proto.model.NotificationDevice', null, global);
goog.exportSymbol('proto.model.NotificationSetting', null, global);
goog.exportSymbol('proto.model.ReadNotificationSettingRequest', null, global);
goog.exportSymbol('proto.model.ReadNotificationSettingResponse', null, global);
goog.exportSymbol('proto.model.UpdateNotificationSettingRequest', null, global);
goog.exportSymbol('proto.model.UpdateNotificationSettingResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationSetting = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.NotificationSetting, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.NotificationSetting.displayName = 'proto.model.NotificationSetting';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationSetting.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationSetting.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationSetting} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationSetting.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    enableNotifications: jspb.Message.getFieldWithDefault(msg, 4, false),
    enableJournalReminder: jspb.Message.getFieldWithDefault(msg, 5, false),
    cronJournalReminder: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationSetting}
 */
proto.model.NotificationSetting.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationSetting;
  return proto.model.NotificationSetting.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationSetting} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationSetting}
 */
proto.model.NotificationSetting.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier;
      reader.readMessage(value,github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableNotifications(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableJournalReminder(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCronJournalReminder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationSetting.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationSetting.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationSetting} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationSetting.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEnableNotifications();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getEnableJournalReminder();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCronJournalReminder();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional atlas.rpc.Identifier id = 1;
 * @return {?proto.atlas.rpc.Identifier}
 */
proto.model.NotificationSetting.prototype.getId = function() {
  return /** @type{?proto.atlas.rpc.Identifier} */ (
    jspb.Message.getWrapperField(this, github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier, 1));
};


/** @param {?proto.atlas.rpc.Identifier|undefined} value */
proto.model.NotificationSetting.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.model.NotificationSetting.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.NotificationSetting.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.model.NotificationSetting.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.model.NotificationSetting.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.model.NotificationSetting.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.NotificationSetting.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.model.NotificationSetting.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.model.NotificationSetting.prototype.setUpdatedAt = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.model.NotificationSetting.prototype.clearUpdatedAt = function() {
  this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.NotificationSetting.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool enable_notifications = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.model.NotificationSetting.prototype.getEnableNotifications = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.model.NotificationSetting.prototype.setEnableNotifications = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool enable_journal_reminder = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.model.NotificationSetting.prototype.getEnableJournalReminder = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.model.NotificationSetting.prototype.setEnableJournalReminder = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string cron_journal_reminder = 6;
 * @return {string}
 */
proto.model.NotificationSetting.prototype.getCronJournalReminder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.model.NotificationSetting.prototype.setCronJournalReminder = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.CreateNotificationSettingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.CreateNotificationSettingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.CreateNotificationSettingRequest.displayName = 'proto.model.CreateNotificationSettingRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.CreateNotificationSettingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.CreateNotificationSettingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.CreateNotificationSettingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.CreateNotificationSettingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.model.NotificationSetting.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.CreateNotificationSettingRequest}
 */
proto.model.CreateNotificationSettingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.CreateNotificationSettingRequest;
  return proto.model.CreateNotificationSettingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.CreateNotificationSettingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.CreateNotificationSettingRequest}
 */
proto.model.CreateNotificationSettingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.NotificationSetting;
      reader.readMessage(value,proto.model.NotificationSetting.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.CreateNotificationSettingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.CreateNotificationSettingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.CreateNotificationSettingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.CreateNotificationSettingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.model.NotificationSetting.serializeBinaryToWriter
    );
  }
};


/**
 * optional NotificationSetting payload = 1;
 * @return {?proto.model.NotificationSetting}
 */
proto.model.CreateNotificationSettingRequest.prototype.getPayload = function() {
  return /** @type{?proto.model.NotificationSetting} */ (
    jspb.Message.getWrapperField(this, proto.model.NotificationSetting, 1));
};


/** @param {?proto.model.NotificationSetting|undefined} value */
proto.model.CreateNotificationSettingRequest.prototype.setPayload = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.model.CreateNotificationSettingRequest.prototype.clearPayload = function() {
  this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.CreateNotificationSettingRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.CreateNotificationSettingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.CreateNotificationSettingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.CreateNotificationSettingResponse.displayName = 'proto.model.CreateNotificationSettingResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.CreateNotificationSettingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.CreateNotificationSettingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.CreateNotificationSettingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.CreateNotificationSettingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.model.NotificationSetting.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.CreateNotificationSettingResponse}
 */
proto.model.CreateNotificationSettingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.CreateNotificationSettingResponse;
  return proto.model.CreateNotificationSettingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.CreateNotificationSettingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.CreateNotificationSettingResponse}
 */
proto.model.CreateNotificationSettingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.NotificationSetting;
      reader.readMessage(value,proto.model.NotificationSetting.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.CreateNotificationSettingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.CreateNotificationSettingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.CreateNotificationSettingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.CreateNotificationSettingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.model.NotificationSetting.serializeBinaryToWriter
    );
  }
};


/**
 * optional NotificationSetting result = 1;
 * @return {?proto.model.NotificationSetting}
 */
proto.model.CreateNotificationSettingResponse.prototype.getResult = function() {
  return /** @type{?proto.model.NotificationSetting} */ (
    jspb.Message.getWrapperField(this, proto.model.NotificationSetting, 1));
};


/** @param {?proto.model.NotificationSetting|undefined} value */
proto.model.CreateNotificationSettingResponse.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.model.CreateNotificationSettingResponse.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.CreateNotificationSettingResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.ReadNotificationSettingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.ReadNotificationSettingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.ReadNotificationSettingRequest.displayName = 'proto.model.ReadNotificationSettingRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.ReadNotificationSettingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.ReadNotificationSettingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.ReadNotificationSettingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.ReadNotificationSettingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.ReadNotificationSettingRequest}
 */
proto.model.ReadNotificationSettingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.ReadNotificationSettingRequest;
  return proto.model.ReadNotificationSettingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.ReadNotificationSettingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.ReadNotificationSettingRequest}
 */
proto.model.ReadNotificationSettingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier;
      reader.readMessage(value,github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.ReadNotificationSettingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.ReadNotificationSettingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.ReadNotificationSettingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.ReadNotificationSettingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional atlas.rpc.Identifier id = 1;
 * @return {?proto.atlas.rpc.Identifier}
 */
proto.model.ReadNotificationSettingRequest.prototype.getId = function() {
  return /** @type{?proto.atlas.rpc.Identifier} */ (
    jspb.Message.getWrapperField(this, github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier, 1));
};


/** @param {?proto.atlas.rpc.Identifier|undefined} value */
proto.model.ReadNotificationSettingRequest.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.model.ReadNotificationSettingRequest.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.ReadNotificationSettingRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.ReadNotificationSettingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.ReadNotificationSettingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.ReadNotificationSettingResponse.displayName = 'proto.model.ReadNotificationSettingResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.ReadNotificationSettingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.ReadNotificationSettingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.ReadNotificationSettingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.ReadNotificationSettingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.model.NotificationSetting.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.ReadNotificationSettingResponse}
 */
proto.model.ReadNotificationSettingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.ReadNotificationSettingResponse;
  return proto.model.ReadNotificationSettingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.ReadNotificationSettingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.ReadNotificationSettingResponse}
 */
proto.model.ReadNotificationSettingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.NotificationSetting;
      reader.readMessage(value,proto.model.NotificationSetting.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.ReadNotificationSettingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.ReadNotificationSettingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.ReadNotificationSettingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.ReadNotificationSettingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.model.NotificationSetting.serializeBinaryToWriter
    );
  }
};


/**
 * optional NotificationSetting result = 1;
 * @return {?proto.model.NotificationSetting}
 */
proto.model.ReadNotificationSettingResponse.prototype.getResult = function() {
  return /** @type{?proto.model.NotificationSetting} */ (
    jspb.Message.getWrapperField(this, proto.model.NotificationSetting, 1));
};


/** @param {?proto.model.NotificationSetting|undefined} value */
proto.model.ReadNotificationSettingResponse.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.model.ReadNotificationSettingResponse.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.ReadNotificationSettingResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.UpdateNotificationSettingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.UpdateNotificationSettingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.UpdateNotificationSettingRequest.displayName = 'proto.model.UpdateNotificationSettingRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.UpdateNotificationSettingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.UpdateNotificationSettingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.UpdateNotificationSettingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.UpdateNotificationSettingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.model.NotificationSetting.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.UpdateNotificationSettingRequest}
 */
proto.model.UpdateNotificationSettingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.UpdateNotificationSettingRequest;
  return proto.model.UpdateNotificationSettingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.UpdateNotificationSettingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.UpdateNotificationSettingRequest}
 */
proto.model.UpdateNotificationSettingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.NotificationSetting;
      reader.readMessage(value,proto.model.NotificationSetting.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.UpdateNotificationSettingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.UpdateNotificationSettingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.UpdateNotificationSettingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.UpdateNotificationSettingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.model.NotificationSetting.serializeBinaryToWriter
    );
  }
};


/**
 * optional NotificationSetting payload = 1;
 * @return {?proto.model.NotificationSetting}
 */
proto.model.UpdateNotificationSettingRequest.prototype.getPayload = function() {
  return /** @type{?proto.model.NotificationSetting} */ (
    jspb.Message.getWrapperField(this, proto.model.NotificationSetting, 1));
};


/** @param {?proto.model.NotificationSetting|undefined} value */
proto.model.UpdateNotificationSettingRequest.prototype.setPayload = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.model.UpdateNotificationSettingRequest.prototype.clearPayload = function() {
  this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.UpdateNotificationSettingRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.UpdateNotificationSettingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.UpdateNotificationSettingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.UpdateNotificationSettingResponse.displayName = 'proto.model.UpdateNotificationSettingResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.UpdateNotificationSettingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.UpdateNotificationSettingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.UpdateNotificationSettingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.UpdateNotificationSettingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.model.NotificationSetting.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.UpdateNotificationSettingResponse}
 */
proto.model.UpdateNotificationSettingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.UpdateNotificationSettingResponse;
  return proto.model.UpdateNotificationSettingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.UpdateNotificationSettingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.UpdateNotificationSettingResponse}
 */
proto.model.UpdateNotificationSettingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.NotificationSetting;
      reader.readMessage(value,proto.model.NotificationSetting.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.UpdateNotificationSettingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.UpdateNotificationSettingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.UpdateNotificationSettingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.UpdateNotificationSettingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.model.NotificationSetting.serializeBinaryToWriter
    );
  }
};


/**
 * optional NotificationSetting result = 1;
 * @return {?proto.model.NotificationSetting}
 */
proto.model.UpdateNotificationSettingResponse.prototype.getResult = function() {
  return /** @type{?proto.model.NotificationSetting} */ (
    jspb.Message.getWrapperField(this, proto.model.NotificationSetting, 1));
};


/** @param {?proto.model.NotificationSetting|undefined} value */
proto.model.UpdateNotificationSettingResponse.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.model.UpdateNotificationSettingResponse.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.UpdateNotificationSettingResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.DeleteNotificationSettingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.DeleteNotificationSettingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.DeleteNotificationSettingRequest.displayName = 'proto.model.DeleteNotificationSettingRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.DeleteNotificationSettingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.DeleteNotificationSettingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.DeleteNotificationSettingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.DeleteNotificationSettingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.DeleteNotificationSettingRequest}
 */
proto.model.DeleteNotificationSettingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.DeleteNotificationSettingRequest;
  return proto.model.DeleteNotificationSettingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.DeleteNotificationSettingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.DeleteNotificationSettingRequest}
 */
proto.model.DeleteNotificationSettingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier;
      reader.readMessage(value,github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.DeleteNotificationSettingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.DeleteNotificationSettingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.DeleteNotificationSettingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.DeleteNotificationSettingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional atlas.rpc.Identifier id = 1;
 * @return {?proto.atlas.rpc.Identifier}
 */
proto.model.DeleteNotificationSettingRequest.prototype.getId = function() {
  return /** @type{?proto.atlas.rpc.Identifier} */ (
    jspb.Message.getWrapperField(this, github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier, 1));
};


/** @param {?proto.atlas.rpc.Identifier|undefined} value */
proto.model.DeleteNotificationSettingRequest.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.model.DeleteNotificationSettingRequest.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.DeleteNotificationSettingRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.DeleteNotificationSettingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.DeleteNotificationSettingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.DeleteNotificationSettingResponse.displayName = 'proto.model.DeleteNotificationSettingResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.DeleteNotificationSettingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.DeleteNotificationSettingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.DeleteNotificationSettingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.DeleteNotificationSettingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.DeleteNotificationSettingResponse}
 */
proto.model.DeleteNotificationSettingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.DeleteNotificationSettingResponse;
  return proto.model.DeleteNotificationSettingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.DeleteNotificationSettingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.DeleteNotificationSettingResponse}
 */
proto.model.DeleteNotificationSettingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.DeleteNotificationSettingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.DeleteNotificationSettingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.DeleteNotificationSettingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.DeleteNotificationSettingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.ListNotificationSettingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.ListNotificationSettingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.ListNotificationSettingRequest.displayName = 'proto.model.ListNotificationSettingRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.ListNotificationSettingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.ListNotificationSettingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.ListNotificationSettingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.ListNotificationSettingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    filter: (f = msg.getFilter()) && github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Filtering.toObject(includeInstance, f),
    orderBy: (f = msg.getOrderBy()) && github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Sorting.toObject(includeInstance, f),
    fields: (f = msg.getFields()) && github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.FieldSelection.toObject(includeInstance, f),
    paging: (f = msg.getPaging()) && github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.ListNotificationSettingRequest}
 */
proto.model.ListNotificationSettingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.ListNotificationSettingRequest;
  return proto.model.ListNotificationSettingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.ListNotificationSettingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.ListNotificationSettingRequest}
 */
proto.model.ListNotificationSettingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Filtering;
      reader.readMessage(value,github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Filtering.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 2:
      var value = new github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Sorting;
      reader.readMessage(value,github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Sorting.deserializeBinaryFromReader);
      msg.setOrderBy(value);
      break;
    case 3:
      var value = new github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.FieldSelection;
      reader.readMessage(value,github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.FieldSelection.deserializeBinaryFromReader);
      msg.setFields(value);
      break;
    case 4:
      var value = new github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Pagination;
      reader.readMessage(value,github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Pagination.deserializeBinaryFromReader);
      msg.setPaging(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.ListNotificationSettingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.ListNotificationSettingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.ListNotificationSettingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.ListNotificationSettingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Filtering.serializeBinaryToWriter
    );
  }
  f = message.getOrderBy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Sorting.serializeBinaryToWriter
    );
  }
  f = message.getFields();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.FieldSelection.serializeBinaryToWriter
    );
  }
  f = message.getPaging();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional infoblox.api.Filtering filter = 1;
 * @return {?proto.infoblox.api.Filtering}
 */
proto.model.ListNotificationSettingRequest.prototype.getFilter = function() {
  return /** @type{?proto.infoblox.api.Filtering} */ (
    jspb.Message.getWrapperField(this, github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Filtering, 1));
};


/** @param {?proto.infoblox.api.Filtering|undefined} value */
proto.model.ListNotificationSettingRequest.prototype.setFilter = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.model.ListNotificationSettingRequest.prototype.clearFilter = function() {
  this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.ListNotificationSettingRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional infoblox.api.Sorting order_by = 2;
 * @return {?proto.infoblox.api.Sorting}
 */
proto.model.ListNotificationSettingRequest.prototype.getOrderBy = function() {
  return /** @type{?proto.infoblox.api.Sorting} */ (
    jspb.Message.getWrapperField(this, github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Sorting, 2));
};


/** @param {?proto.infoblox.api.Sorting|undefined} value */
proto.model.ListNotificationSettingRequest.prototype.setOrderBy = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.model.ListNotificationSettingRequest.prototype.clearOrderBy = function() {
  this.setOrderBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.ListNotificationSettingRequest.prototype.hasOrderBy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional infoblox.api.FieldSelection fields = 3;
 * @return {?proto.infoblox.api.FieldSelection}
 */
proto.model.ListNotificationSettingRequest.prototype.getFields = function() {
  return /** @type{?proto.infoblox.api.FieldSelection} */ (
    jspb.Message.getWrapperField(this, github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.FieldSelection, 3));
};


/** @param {?proto.infoblox.api.FieldSelection|undefined} value */
proto.model.ListNotificationSettingRequest.prototype.setFields = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.model.ListNotificationSettingRequest.prototype.clearFields = function() {
  this.setFields(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.ListNotificationSettingRequest.prototype.hasFields = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional infoblox.api.Pagination paging = 4;
 * @return {?proto.infoblox.api.Pagination}
 */
proto.model.ListNotificationSettingRequest.prototype.getPaging = function() {
  return /** @type{?proto.infoblox.api.Pagination} */ (
    jspb.Message.getWrapperField(this, github_com_infobloxopen_atlas$app$toolkit_query_collection_operators_pb.Pagination, 4));
};


/** @param {?proto.infoblox.api.Pagination|undefined} value */
proto.model.ListNotificationSettingRequest.prototype.setPaging = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.model.ListNotificationSettingRequest.prototype.clearPaging = function() {
  this.setPaging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.ListNotificationSettingRequest.prototype.hasPaging = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.ListNotificationSettingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.ListNotificationSettingResponse.repeatedFields_, null);
};
goog.inherits(proto.model.ListNotificationSettingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.ListNotificationSettingResponse.displayName = 'proto.model.ListNotificationSettingResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.ListNotificationSettingResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.ListNotificationSettingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.ListNotificationSettingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.ListNotificationSettingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.ListNotificationSettingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.model.NotificationSetting.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.ListNotificationSettingResponse}
 */
proto.model.ListNotificationSettingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.ListNotificationSettingResponse;
  return proto.model.ListNotificationSettingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.ListNotificationSettingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.ListNotificationSettingResponse}
 */
proto.model.ListNotificationSettingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.NotificationSetting;
      reader.readMessage(value,proto.model.NotificationSetting.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.ListNotificationSettingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.ListNotificationSettingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.ListNotificationSettingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.ListNotificationSettingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.model.NotificationSetting.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NotificationSetting results = 1;
 * @return {!Array<!proto.model.NotificationSetting>}
 */
proto.model.ListNotificationSettingResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.model.NotificationSetting>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.model.NotificationSetting, 1));
};


/** @param {!Array<!proto.model.NotificationSetting>} value */
proto.model.ListNotificationSettingResponse.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.model.NotificationSetting=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.NotificationSetting}
 */
proto.model.ListNotificationSettingResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.model.NotificationSetting, opt_index);
};


proto.model.ListNotificationSettingResponse.prototype.clearResultsList = function() {
  this.setResultsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationDevice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.NotificationDevice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.NotificationDevice.displayName = 'proto.model.NotificationDevice';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationDevice.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationDevice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationDevice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationDevice.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deviceToken: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationDevice}
 */
proto.model.NotificationDevice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationDevice;
  return proto.model.NotificationDevice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationDevice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationDevice}
 */
proto.model.NotificationDevice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier;
      reader.readMessage(value,github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationDevice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationDevice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationDevice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationDevice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeviceToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional atlas.rpc.Identifier id = 1;
 * @return {?proto.atlas.rpc.Identifier}
 */
proto.model.NotificationDevice.prototype.getId = function() {
  return /** @type{?proto.atlas.rpc.Identifier} */ (
    jspb.Message.getWrapperField(this, github_com_infobloxopen_atlas$app$toolkit_rpc_resource_resource_pb.Identifier, 1));
};


/** @param {?proto.atlas.rpc.Identifier|undefined} value */
proto.model.NotificationDevice.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.model.NotificationDevice.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.NotificationDevice.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.model.NotificationDevice.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.model.NotificationDevice.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.model.NotificationDevice.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.NotificationDevice.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.model.NotificationDevice.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.model.NotificationDevice.prototype.setUpdatedAt = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.model.NotificationDevice.prototype.clearUpdatedAt = function() {
  this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.NotificationDevice.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string device_token = 4;
 * @return {string}
 */
proto.model.NotificationDevice.prototype.getDeviceToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.model.NotificationDevice.prototype.setDeviceToken = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.CreateNotificationDeviceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.CreateNotificationDeviceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.CreateNotificationDeviceRequest.displayName = 'proto.model.CreateNotificationDeviceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.CreateNotificationDeviceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.CreateNotificationDeviceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.CreateNotificationDeviceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.CreateNotificationDeviceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    payload: (f = msg.getPayload()) && proto.model.NotificationDevice.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.CreateNotificationDeviceRequest}
 */
proto.model.CreateNotificationDeviceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.CreateNotificationDeviceRequest;
  return proto.model.CreateNotificationDeviceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.CreateNotificationDeviceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.CreateNotificationDeviceRequest}
 */
proto.model.CreateNotificationDeviceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.NotificationDevice;
      reader.readMessage(value,proto.model.NotificationDevice.deserializeBinaryFromReader);
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.CreateNotificationDeviceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.CreateNotificationDeviceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.CreateNotificationDeviceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.CreateNotificationDeviceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPayload();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.model.NotificationDevice.serializeBinaryToWriter
    );
  }
};


/**
 * optional NotificationDevice payload = 1;
 * @return {?proto.model.NotificationDevice}
 */
proto.model.CreateNotificationDeviceRequest.prototype.getPayload = function() {
  return /** @type{?proto.model.NotificationDevice} */ (
    jspb.Message.getWrapperField(this, proto.model.NotificationDevice, 1));
};


/** @param {?proto.model.NotificationDevice|undefined} value */
proto.model.CreateNotificationDeviceRequest.prototype.setPayload = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.model.CreateNotificationDeviceRequest.prototype.clearPayload = function() {
  this.setPayload(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.CreateNotificationDeviceRequest.prototype.hasPayload = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.CreateNotificationDeviceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.CreateNotificationDeviceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.model.CreateNotificationDeviceResponse.displayName = 'proto.model.CreateNotificationDeviceResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.CreateNotificationDeviceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.CreateNotificationDeviceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.CreateNotificationDeviceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.CreateNotificationDeviceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: (f = msg.getResult()) && proto.model.NotificationDevice.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.CreateNotificationDeviceResponse}
 */
proto.model.CreateNotificationDeviceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.CreateNotificationDeviceResponse;
  return proto.model.CreateNotificationDeviceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.CreateNotificationDeviceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.CreateNotificationDeviceResponse}
 */
proto.model.CreateNotificationDeviceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.NotificationDevice;
      reader.readMessage(value,proto.model.NotificationDevice.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.CreateNotificationDeviceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.CreateNotificationDeviceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.CreateNotificationDeviceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.CreateNotificationDeviceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.model.NotificationDevice.serializeBinaryToWriter
    );
  }
};


/**
 * optional NotificationDevice result = 1;
 * @return {?proto.model.NotificationDevice}
 */
proto.model.CreateNotificationDeviceResponse.prototype.getResult = function() {
  return /** @type{?proto.model.NotificationDevice} */ (
    jspb.Message.getWrapperField(this, proto.model.NotificationDevice, 1));
};


/** @param {?proto.model.NotificationDevice|undefined} value */
proto.model.CreateNotificationDeviceResponse.prototype.setResult = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.model.CreateNotificationDeviceResponse.prototype.clearResult = function() {
  this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.model.CreateNotificationDeviceResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.model);
